#include<iostream>
// #include<set>     //  for inlcuded set in program ------>>>>>>>>>>>>
// #include<set>     //  for inlcuded multiset in program ------>>>>>>>>>>>>
#include<unordered_set>     //  for inlcuded unordered set  in program ------>>>>>>>>>>>>
using namespace std;

int main(){
// set<int> s ;
// s.insert(1);
// s.insert(2);
// s.insert(3);   // in set no duplicates elements will be printed so -->>>>> one 3 will skip automatically 
// s.insert(3);
// s.insert(5);

// for(auto i : s){
//     cout<<i<<" ";
// } 

// for( auto i = s.begin() ; i!=s.end() ; i++){       //----->>>>>>>  we can print in this way also
//     cout<<*i<<" ";
// }

// for( auto i = s.rbegin() ; i!=s.rend() ; i++){       //----->>>>>>>  we can print in this way also (but -->>> it will print reverse order)
//     cout<<*i<<" ";
// }


//  lower_bound and upper_bound --------->>>>>>>>>>>>>


// cout<<*s.lower_bound(3)<<endl;
// cout<<*s.lower_bound(4)<<endl;
// cout<<*s.upper_bound(3)<<endl;
// cout<<*s.lower_bound(7)<<endl;  // any value  (because these are not present )
// cout<<*s.upper_bound(7)<<endl;  //  any value  (because these are not present )
// cout<<(s.upper_bound(5)==s.end());

//  erase ------>>>>>>>

// s.erase(2);
// s.erase(3);  
// s.erase(s.begin() , s.end());
// for(auto i : s){
//     cout<<i<<" ";
// } 

// size 

// cout<<s.size()<<endl;


//  multi set ---->>>>>>>>

// multiset<int> s ;  //  here we will write multiset ->>>>>>>>>> for introducing --->>>>>>>>>>>.

// s.insert(1);
// s.insert(2);
// s.insert(3);   // in multi set  duplicates elements will be printed so -->>>>> one 3 will not skip in this --->>>>>>>>>>>>>
// s.insert(3);
// s.insert(3);
// s.insert(5);

// for(auto i : s){
//     cout<<i<<" ";
// }

//s.erase(3);  // -->>>>>>> all 3 will delete -->>>>>>>>>>>
//s.erase(s.find(3));  // -->>>>>>> if we  want to delete only the one 3 -->>>  this will erase only one 3  -->>>>>>>>>>>


//  unordered_set  --------->>>>>>>>>>>

 // unordered_set<int> s ;  //  here we will write unordered_set ->>>>>>>>>> for introducing --->>>>>>>>>>>.

// s.insert(1);
// s.insert(2);
// s.insert(3);   // in unordered_set the elements will be in the unsorted order  --->>>>>>>>>>>>>
                  //  but --->>>>>>> in set and multiset -->>>  we get sorted ordered ----->>>>>>>
// s.insert(3);
// s.insert(3);
// s.insert(5);

// for(auto i : s){
//     cout<<i<<" ";
// }




return 0;
 }
